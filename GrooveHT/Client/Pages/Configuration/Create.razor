@page "/api/configuration/create"
@using GrooveHT.Shared.Models.Configuration
@using GrooveHT.Shared.Models.Habit
@using GrooveHT.Shared.Models.Frequency
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3>Create</h3>
@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}
@if (habits == null)
{
    <p><em>>Loading...</em></p>
} 
else
{
<div class="container">
    <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
            <div class="form-group">
                <label>Name this configuration</label>
                <InputText class="form-control" @bind-Value="model.Name" />
            </div>
            <label>Choose your Habit</label>
            <InputSelect class="form-control" @bind-Value="model.HabitId">
                @foreach (var habit in habits)
                {
                    <option value="@habit.Id">@habit.HabitTitle</option>
                }
            </InputSelect>

            <label>Choose your frequency</label>
            <InputSelect class="form-control" @bind-Value="model.FrequencyId">
                @foreach (var frequency in frequencies)
                {
                    <option value="@frequency.Id">@frequency.FrequencyType</option>
                }
            </InputSelect>
            
            <label>Start Date</label>
            <InputDate class="form-control" @bind-Value="model.StartDate" />

        <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>
    </EditForm>
</div>
}

@code {
    private ConfigurationCreate model = new();
    private IEnumerable<HabitListItem> habits;
    private IEnumerable<FrequencyListItem> frequencies;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        habits = await http.GetFromJsonAsync<IEnumerable<HabitListItem>>("/api/habit/");

        frequencies = await http.GetFromJsonAsync<IEnumerable<FrequencyListItem>>("/api/frequency/");

    }

    private async void HandleSubmit()
    {
        var createRes = await http.PostAsJsonAsync<ConfigurationCreate>("/api/configuration", model);
        if (createRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/api/tracker");
        }
        else
        {
            errorMessage = "Could not create your configuration right now. Please try again later.";
        }
    }

    //public async Task CreateNewTracker()
}
