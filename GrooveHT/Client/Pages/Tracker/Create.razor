@page "/api/tracker/create"
@attribute [Authorize]
@inject HttpClient Http
@using GrooveHT.Shared.Models.Configuration;
@using GrooveHT.Shared.Models.Tracker
@using Microsoft.AspNetCore.Authorization;
@inject NavigationManager navigation

<h3>Daily Tracker</h3>

@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}
@if (_trackers == null)
{
    <p><Edit>Loading...</Edit></p>
}
<div class="container">
    <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label>Choose your Habit Configuration you'd like to log</label>
        <InputSelect class="form-control" @bind-Value="model.ConfigurationId">
            @foreach (var configuration in _configurations)
            {
                <option value="@configuration.Id">@configuration.Name</option>
            }
        </InputSelect>

        <label class="form-check-label" for="flexCheckDefault">Task Completed</label>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" @bind-value="model.TaskCompleted" id="flexCheckDefault">
        </div>

        <label>Daily Notes</label>
        <InputText class="form-control" @bind-Value="model.Notes" />
        <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>

    </EditForm>
</div>

@code {
    private TrackerCreate model = new();
    private IEnumerable<ConfigurationListItem> _configurations;
    private IEnumerable<TrackerListItem> _trackers;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        _trackers = await Http.GetFromJsonAsync<IEnumerable<TrackerListItem>>("/api/tracker/");
        _configurations = await Http.GetFromJsonAsync<IEnumerable<ConfigurationListItem>>("/api/configuration/");

    }

    private async void HandleSubmit()
    {
        var createdRes = await Http.PostAsJsonAsync<TrackerCreate>("/api/tracker", model);
        if (createdRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/api/tracker");
        }
        else
        {
            errorMessage = "Could not log your completion right now. Please try again later.";
        }
    }
}
